inset('modint.type')
def call(m_axn, m_axd, m_ayn, m_ayd):
    if !m_axn and !m_ayn:
        return([0, 1, 0, 1], 4)
    with P_______P = -4294968273:
        # No need to add (A, 1) because A = 0 for bitcoin
        with m_mn = m_axn * m_axn * m(3) * m_ayd:
            with m_md = m_axd * m_axd * m_ayn * m(2):
                with m_msqn = m_mn * m_mn:
                    with m_msqd = m_md * m_md:
                        with m_xn = m_msqn * m_axd - m_msqd * m_axn * m(2):
                            with m_xd = m_msqd * m_axd:
                                with m_mamxn = (m_axn * m_xd - m_axd * m_xn) * m_mn:
                                    with m_mamxd = m_axd * m_xd * m_md:
                                        with m_yn = m_mamxn * m_ayd - m_mamxd * m_ayn:
                                            with m_yd = m_mamxd * m_ayd:
                                                return([m_xn, m_xd, m_yn, m_yd], 4)
